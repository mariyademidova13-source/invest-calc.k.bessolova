<!doctype html>
<html lang="uk">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Калькулятор інвестицій</title>
  <meta name="color-scheme" content="light dark">
  <style>
    :root{ --bg:#fff; --fg:#0f172a; --muted:#f1f5f9; --line:#e2e8f0; --hint:#fef9c3; }
    @media (prefers-color-scheme: dark){
      :root{ --bg:#0b0f19; --fg:#e5e7eb; --muted:#111827; --line:#1f2937; --hint:#3a3002; }
    }
    *{ box-sizing:border-box; }
    body { background:var(--bg); color:var(--fg); font-family: system-ui,-apple-system,Segoe UI,Roboto,Inter,sans-serif; margin:16px; }
    h2 { margin:0 0 12px; }
    .card { border:1px solid var(--line); border-radius:16px; padding:16px; margin-bottom:16px; background:var(--bg); }
    .row { display:grid; grid-template-columns:1fr 1fr; gap:12px; }
    .row3{ display:grid; grid-template-columns:1fr 1fr 1fr; gap:12px; }
    label { font-size:14px; opacity:.95; display:block; margin-bottom:6px; }
    label small{ opacity:.65; font-weight:500; }
    input, select { width:100%; padding:10px; border-radius:10px; border:1px solid var(--line); background:var(--bg); color:var(--fg); }
    button { padding:12px 16px; border-radius:12px; border:1px solid var(--line); cursor:pointer; background:var(--fg); color:var(--bg); }
    .muted { background:var(--muted); color:var(--fg); }
    .summary { font-weight:600; line-height:1.5; }
    .pill { padding:4px 8px; border-radius:999px; background:#eef2ff22; display:inline-block; font-size:12px; border:1px dashed var(--line); }
    table { width:100%; border-collapse:collapse; font-size:12px; }
    th, td { padding:6px 8px; border-bottom:1px solid var(--line); text-align:right; white-space:nowrap; }
    th:first-child, td:first-child { text-align:left; }
    .stack{ display:flex; gap:8px; flex-wrap:wrap; align-items:center; }
    .grid2{ display:grid; grid-template-columns:1fr 1fr; gap:16px; }
    .diff { padding:10px; border-radius:12px; background:var(--muted); }
    .hint { background:var(--hint); border:1px dashed var(--line); }
    .help { font-size:12px; opacity:.75; margin-top:6px; }
    .flex { display:flex; gap:8px; align-items:center; flex-wrap:wrap; }
    canvas { width:100%; height:280px; border:1px solid var(--line); border-radius:12px; background:var(--bg); }
    .kbd { font-family: ui-monospace, SFMono-Regular, Menlo, Consolas, monospace; background:var(--muted); padding:2px 6px; border-radius:6px; }
  </style>
  <script src="https://telegram.org/js/telegram-web-app.js"></script>
</head>
<body>
  <h2>Калькулятор відсотків та реінвестування</h2>

  <!-- Інструкція -->
  <div class="card hint">
    <b>Як користуватись:</b><br>
    1️⃣ Оберіть <b>валюту</b> та <b>горизонт</b> (місяці/роки/десятиліття).<br>
    2️⃣ Вкажіть <b>стартову суму</b> і, за потреби, <b>щомісячний внесок</b>.<br>
    3️⃣ Задайте <b>річну ставку</b> і як часто нараховуються % (капіталізація).<br>
    4️⃣ (Опц.) Додайте <b>податок</b> і <b>інфляцію</b> для реалістики.<br>
    5️⃣ Натисніть <b>«Розрахувати»</b> — отримаєте <i>Реінвест</i> та <i>Вивід %</i> + різницю і графік.<br>
    6️⃣ Можна <b>експортувати CSV</b> або <b>надіслати результат у бот</b>.
  </div>

  <!-- Параметри -->
  <div class="card">
    <div class="row3">
      <div>
        <label>Валюта <small>(UAH / USD / EUR)</small></label>
        <select id="currency">
          <option value="UAH" selected>₴ UAH</option>
          <option value="USD">$ USD</option>
          <option value="EUR">€ EUR</option>
        </select>
      </div>
      <div>
        <label>Горизонт вимірювання <small>(одиниця)</small></label>
        <select id="horizonUnit">
          <option value="months">місяці</option>
          <option value="years" selected>роки</option>
          <option value="decades">десятиліття</option>
        </select>
        <div class="help">Напр., «5 років» або «2 десятиліття» = 20 років.</div>
      </div>
      <div>
        <label>Кількість періодів <small>(за обраною одиницею)</small></label>
        <input id="horizonCount" type="number" min="1" step="1" value="5">
      </div>
    </div>

    <div class="row">
      <div>
        <label>Стартова сума <small>(початковий депозит)</small></label>
        <input id="p0" type="number" min="0" step="0.01" value="1000">
      </div>
      <div>
        <label>Щомісячний внесок <small>(додатково щомісяця)</small></label>
        <input id="pmt" type="number" min="0" step="0.01" value="100">
      </div>
    </div>

    <div class="row">
      <div>
        <label>Річна ставка, % <small>(наприклад, 12)</small></label>
        <input id="rate" type="number" min="0" step="0.01" value="12">
        <div class="help">Ставка завжди річна. Капіталізація нижче визначає частоту нарахувань.</div>
      </div>
      <div>
        <label>Капіталізація <small>(нарахувань за рік)</small></label>
        <select id="m">
          <option value="12" selected>Щомісячна</option>
          <option value="4">Щоквартальна</option>
          <option value="1">Річна</option>
        </select>
      </div>
    </div>

    <div class="row">
      <div>
        <label>Податок на дохід, % <small>(опц.)</small></label>
        <input id="tax" type="number" min="0" step="0.01" value="0">
      </div>
      <div>
        <label>Інфляція, % <small>(опц.)</small></label>
        <input id="infl" type="number" min="0" step="0.01" value="0">
      </div>
    </div>

    <!-- Пресети + Автопідбір -->
    <div class="row">
      <div>
        <label>Приклади сценаріїв (пресети)</label>
        <div class="flex">
          <select id="preset">
            <option value="base_usd">Базовий • USD • 12% • 5р • P0=1000 • PMT=100</option>
            <option value="ua_conservative">Консервативний • UAH • 15% • 10р • P0=50000 • PMT=3000</option>
            <option value="eu_pension">Пенсійний • EUR • 8% • 3 десятиліття • P0=0 • PMT=200</option>
          </select>
          <button class="muted" id="applyPreset">Застосувати</button>
        </div>
        <div class="help">Швидко підставляє параметри для гри з моделями.</div>
      </div>

      <div>
        <label>Автопідбір внеску під ціль</label>
        <div class="flex">
          <input id="goal" type="number" min="0" step="0.01" placeholder="Цільова сума (у вибраній валюті)" style="flex:1">
          <label class="flex" style="gap:6px;"><input type="checkbox" id="goalReal"> ціль у реальних цінах</label>
          <button class="muted" id="solvePMT">Підібрати внесок</button>
        </div>
        <div class="help">Підбирає щомісячний внесок для <b>реінвест</b> з урахуванням податку на %.</div>
      </div>
    </div>

    <!-- НОВЕ: Ціль за часом -->
    <div class="row">
      <div>
        <label>Ціль за часом (скільки потрібно часу?)</label>
        <div class="flex">
          <input id="goalTime" type="number" min="0" step="0.01" placeholder="Цільова сума (в обраній валюті)" style="flex:1">
          <label class="flex" style="gap:6px;"><input type="checkbox" id="goalTimeReal"> ціль у реальних цінах</label>
          <button class="muted" id="solveTime">Порахувати час</button>
        </div>
        <div id="solveTimeOut" class="help">Розрахунок для <b>реінвест</b> з урахуванням податку. Відповідь: місяці/роки/десятиліття.</div>
      </div>
      <div>
        <label>&nbsp;</label>
        <div class="stack" style="margin-top:2px;">
          <button id="calcBtn">Розрахувати</button>
          <button class="muted" id="sendBtn" disabled>Надіслати в бот</button>
          <button class="muted" id="csvReBtn" disabled>CSV (Реінвест)</button>
          <button class="muted" id="csvWdBtn" disabled>CSV (Вивід %)</button>
        </div>
      </div>
    </div>
  </div>

  <!-- Результати -->
  <div class="card grid2">
    <div>
      <div class="pill">Реінвест</div>
      <div id="summaryRe" class="summary">—</div>
    </div>
    <div>
      <div class="pill">Вивід відсотків</div>
      <div id="summaryWd" class="summary">—</div>
    </div>
  </div>

  <div class="card diff" id="diffBox" style="display:none;"></div>

  <!-- Графік -->
  <div class="card">
    <div class="pill">Графік зростання (номінал)</div>
    <canvas id="chart" width="900" height="300"></canvas>
    <div class="help">Легенда: <span class="kbd">■</span> Реінвест (синя), <span class="kbd">■</span> Вивід % (помаранчева)</div>
  </div>

  <div class="card grid2">
    <div>
      <div class="pill">Прев’ю перших 12 періодів — Реінвест</div>
      <div style="overflow:auto; max-height:320px; margin-top:8px;">
        <table id="tableRe">
          <thead><tr>
            <th>Період</th><th>Баланс на поч.</th><th>Внесок</th><th>Нарах. %</th><th>Вивід %</th><th>Баланс на кін.</th>
          </tr></thead>
          <tbody></tbody>
        </table>
      </div>
    </div>
    <div>
      <div class="pill">Прев’ю перших 12 періодів — Вивід %</div>
      <div style="overflow:auto; max-height:320px; margin-top:8px;">
        <table id="tableWd">
          <thead><tr>
            <th>Період</th><th>Баланс на поч.</th><th>Внесок</th><th>Нарах. %</th><th>Вивід %</th><th>Баланс на кін.</th>
          </tr></thead>
          <tbody></tbody>
        </table>
      </div>
    </div>
  </div>

  <!-- Пояснення -->
  <div class="card">
    <b>Пояснення полів:</b>
    <ul style="margin:8px 0 0 18px; line-height:1.5;">
      <li><b>Реінвест</b> — відсотки додаються до тіла; <b>Вивід %</b> — відсотки забираються.</li>
      <li><b>Податок</b> враховується на кожному нарахуванні відсотків.</li>
      <li><b>Інфляція</b> впливає лише на «реальну» оцінку, графік — у номіналі.</li>
    </ul>
  </div>

  <p style="font-size:12px;opacity:.7">ℹ️ Навчальний інструмент, не інвестрекомендація.</p>

<script>
let _payload = null;

const fmtMoney = (x, cur='UAH') =>
  new Intl.NumberFormat('uk-UA', { style:'currency', currency:cur, maximumFractionDigits:2 }).format(x);

function monthsTotal(unit, count){
  if(unit==='months') return count;
  if(unit==='years') return count * 12;
  if(unit==='decades') return count * 10 * 12;
  return count*12;
}

function computeScenario({P0,PMT,r,m,unit,count,taxR,infl,scenario, collectSeries=false}){
  const n = Math.round( monthsTotal(unit, count) * (m/12) );
  const i = r / m;

  let balance = P0;
  let totalContrib = P0;
  let earnedGross = 0;
  let withdrawn = 0;
  const rows = [];
  const series = collectSeries ? [balance] : null; // для графіка (значення на кожен період)

  for (let t=1; t<=n; t++){
    const interest = balance * i;
    const interestAfterTax = interest * (1 - taxR);

    if (scenario==='withdraw'){
      withdrawn += interestAfterTax;
      balance += PMT;
    } else {
      balance += interestAfterTax + PMT;
    }
    earnedGross += interest;
    totalContrib += PMT;

    if (t<=12){
      const begin = balance - (scenario==='withdraw' ? PMT : (PMT + interestAfterTax));
      rows.push({ period:t, begin, contrib:PMT, interest:interestAfterTax, out:(scenario==='withdraw'?interestAfterTax:0), end:balance });
    }
    if (collectSeries) series.push(balance);
  }

  const years = monthsTotal(unit, count)/12;
  const finalGross = balance;
  const realFinal  = infl>0 ? finalGross / Math.pow(1+infl, years) : finalGross;

  return { finalGross, realFinal, totalContrib, earnedGross, withdrawn, rows, n, series };
}

function renderSummary(el, data, cur, label){
  el.innerHTML =
    `${label ? `Горизонт: <b>${label}</b><br>` : ''}` +
    `Кінцева сума: <b>${fmtMoney(data.finalGross, cur)}</b><br>` +
    `Внески за період: ${fmtMoney(data.totalContrib, cur)}<br>` +
    `Зароблені % (брутто): ${fmtMoney(data.earnedGross, cur)}<br>` +
    (data.realFinal !== undefined && data.realFinal !== data.finalGross ? `Реальна сума (з інфляцією): <b>${fmtMoney(data.realFinal, cur)}</b><br>` : '') +
    (data.withdrawn ? `Виведено %: <b>${fmtMoney(data.withdrawn, cur)}</b>` : '');
}

function renderTable(tbody, rows, cur){
  tbody.innerHTML = rows.map(r => `
    <tr>
      <td>${r.period}</td>
      <td>${fmtMoney(r.begin, cur)}</td>
      <td>${fmtMoney(r.contrib, cur)}</td>
      <td>${fmtMoney(r.interest, cur)}</td>
      <td>${fmtMoney(r.out, cur)}</td>
      <td>${fmtMoney(r.end, cur)}</td>
    </tr>`).join('');
}

function toCSV(arr){
  const head = ['Період','Баланс_поч','Внесок','Нарах_%','Вивід_%','Баланс_кін'];
  const rows = arr.map(r => [r.period, r.begin, r.contrib, r.interest, r.out, r.end]);
  return [head, ...rows].map(row => row.join(',')).join('\n');
}
function download(filename, text){
  const a = document.createElement('a');
  a.setAttribute('href', 'data:text/csv;charset=utf-8,' + encodeURIComponent(text));
  a.setAttribute('download', filename);
  a.click();
}

/* ---------- Пресети ---------- */
function applyPreset(){
  const v = document.getElementById('preset').value;

  if (v==='base_usd'){
    setVal('currency','USD');
    setVal('horizonUnit','years'); setNum('horizonCount',5);
    setNum('p0',1000); setNum('pmt',100);
    setNum('rate',12); setVal('m','12');
    setNum('tax',0);   setNum('infl',0);
  }
  if (v==='ua_conservative'){
    setVal('currency','UAH');
    setVal('horizonUnit','years'); setNum('horizonCount',10);
    setNum('p0',50000); setNum('pmt',3000);
    setNum('rate',15);  setVal('m','12');
    setNum('tax',19.5); setNum('infl',0);
  }
  if (v==='eu_pension'){
    setVal('currency','EUR');
    setVal('horizonUnit','decades'); setNum('horizonCount',3); // 30 років
    setNum('p0',0); setNum('pmt',200);
    setNum('rate',8); setVal('m','12');
    setNum('tax',0);  setNum('infl',2);
  }
}
function setVal(id, val){ document.getElementById(id).value = val; }
function setNum(id, num){ const el=document.getElementById(id); el.value = typeof num==='number' ? num : parseFloat(num)||0; }

/* ---------- Автопідбір PMT під ціль ---------- */
function solvePMT(){
  const goal = +document.getElementById('goal').value || 0;
  if (goal<=0){ alert('Вкажіть коректну цільову суму.'); return; }

  const unit = document.getElementById('horizonUnit').value;
  const count = +document.getElementById('horizonCount').value;

  const P0   = +document.getElementById('p0').value || 0;
  const r    = (+document.getElementById('rate').value || 0) / 100;
  const m    = +document.getElementById('m').value;
  const taxR = (+document.getElementById('tax').value || 0) / 100;
  const infl = (+document.getElementById('infl').value || 0) / 100;
  const real = document.getElementById('goalReal').checked;

  const years = monthsTotal(unit, count)/12;
  const n = Math.round( monthsTotal(unit, count) * (m/12) );
  const i_eff = (r / m) * (1 - taxR);

  const FV_target = real ? goal * Math.pow(1 + infl, years) : goal;

  let PMT;
  if (Math.abs(i_eff) < 1e-9){
    PMT = (FV_target - P0) / n;
  } else {
    const pow = Math.pow(1 + i_eff, n);
    const denom = (pow - 1) / i_eff;
    PMT = (FV_target - P0 * pow) / denom;
  }

  if (!isFinite(PMT)){ alert('Не вдалося обчислити внесок. Перевірте ставку/горизонт.'); return; }

  document.getElementById('pmt').value = Math.max(0, Math.round(PMT * 100) / 100);
  calc(); // перерахувати з підібраним внеском
}

/* ---------- Ціль за часом (підбір тривалості) ---------- */
/* Підбираємо кількість нарахувань n для сценарію "реінвест", щоб FV >= ціль.
   Використовуємо бінпоіск по n (в цілих), i_eff = (r/m)*(1 - taxR).
   Якщо ціль у реальних цінах — масштабуємо в номінал: goal_nom = goal_real * (1+infl)^years,
   але years = n/m -> це рекурсивно. Тож робимо ітераційно: оцінюємо years = n/m під час перевірки. */
function futureValueNominal(P0, PMT, i_eff, n){
  if (Math.abs(i_eff) < 1e-12){
    return P0 + PMT * n;
  }
  const pow = Math.pow(1 + i_eff, n);
  return P0 * pow + PMT * ((pow - 1) / i_eff);
}

function solveTime(){
  const goal = +document.getElementById('goalTime').value || 0;
  if (goal<=0){ alert('Вкажіть коректну цільову суму.'); return; }

  const P0   = +document.getElementById('p0').value || 0;
  const PMT  = +document.getElementById('pmt').value || 0;
  const r    = (+document.getElementById('rate').value || 0) / 100;
  const m    = +document.getElementById('m').value;
  const taxR = (+document.getElementById('tax').value || 0) / 100;
  const infl = (+document.getElementById('infl').value || 0) / 100;
  const real = document.getElementById('goalTimeReal').checked;

  const i_eff = (r / m) * (1 - taxR);

  // Бінарний пошук по n (періоди нарахувань). Обмежимося 0..(m*100 років) для стабільності.
  let lo = 0, hi = m * 100; // максимум 100 років
  let ans = null;

  while (lo <= hi){
    const mid = Math.floor((lo + hi) / 2);
    // Якщо ціль у реальних цінах — конвертуємо в номінал під поточні mid (years = mid/m)
    const years = mid / m;
    const targetNom = real ? goal * Math.pow(1 + infl, years) : goal;

    const fv = futureValueNominal(P0, PMT, i_eff, mid);

    if (fv >= targetNom){
      ans = mid;
      hi = mid - 1;
    } else {
      lo = mid + 1;
    }
  }

  const out = document.getElementById('solveTimeOut');
  if (ans === null){
    out.innerHTML = 'За поточних параметрів досягти цілі не вдається (перевірте ставку/внесок).';
    return;
  }

  const months = Math.round(ans * (12 / m)); // нарахувань ans → місяці
  const years  = months / 12;
  const decades = years / 10;

  out.innerHTML =
    `Потрібно приблизно: <b>${months}</b> міс. (~ <b>${years.toFixed(1)}</b> р. або <b>${decades.toFixed(2)}</b> десятиліття) для досягнення цілі у сценарії <b>реінвест</b>.`;
}

/* ---------- Графік (Canvas) ---------- */
function drawChart(seriesRe, seriesWd){
  const canvas = document.getElementById('chart');
  const ctx = canvas.getContext('2d');

  // Retina scale
  const dpr = window.devicePixelRatio || 1;
  canvas.width = canvas.clientWidth * dpr;
  canvas.height = canvas.clientHeight * dpr;
  ctx.scale(dpr, dpr);

  const w = canvas.clientWidth, h = canvas.clientHeight;
  ctx.clearRect(0,0,w,h);

  // Паддінги
  const padL = 48, padR = 12, padT = 12, padB = 28;

  // Дані
  const len = Math.max(seriesRe.length, seriesWd.length);
  const all = [...seriesRe, ...seriesWd];
  const min = Math.min(...all);
  const max = Math.max(...all);
  const yMin = Math.max(0, Math.floor(min));
  const yMax = Math.ceil(max);

  // Функції перетворення
  const X = (i)=> padL + ( (w - padL - padR) * (i / (len - 1 || 1)) );
  const Y = (v)=> padT + (h - padT - padB) * (1 - (v - yMin) / (yMax - yMin || 1));

  // Сітка/осі
  ctx.strokeStyle = getComputedStyle(document.body).getPropertyValue('--line');
  ctx.lineWidth = 1;
  ctx.beginPath();
  // горизонтальні лінії 0%, 25%, 50%, 75%, 100%
  for (let k=0; k<=4; k++){
    const y = padT + (h - padT - padB) * (k/4);
    ctx.moveTo(padL, y); ctx.lineTo(w - padR, y);
  }
  ctx.stroke();

  // Мітки по Y
  ctx.fillStyle = getComputedStyle(document.body).getPropertyValue('--fg');
  ctx.font = '12px system-ui, -apple-system, Segoe UI, Roboto, sans-serif';
  ctx.textAlign = 'right';
  ctx.textBaseline = 'middle';
  for (let k=0; k<=4; k++){
    const v = yMax - (yMax - yMin) * (k/4);
    const y = padT + (h - padT - padB) * (k/4);
    ctx.fillText(shortNum(v), padL - 6, y);
  }

  // Лінія реінвест (синя)
  drawLine(seriesRe, '#2563eb'); // blue-600
  // Лінія вивід % (помаранчева)
  drawLine(seriesWd, '#f97316'); // orange-500

  function drawLine(series, color){
    if (!series || series.length<2) return;
    ctx.strokeStyle = color; ctx.lineWidth = 2;
    ctx.beginPath();
    ctx.moveTo(X(0), Y(series[0]));
    for (let i=1; i<series.length; i++){
      ctx.lineTo(X(i), Y(series[i]));
    }
    ctx.stroke();
  }

  function shortNum(v){
    if (v >= 1e9) return (v/1e9).toFixed(1)+'B';
    if (v >= 1e6) return (v/1e6).toFixed(1)+'M';
    if (v >= 1e3) return (v/1e3).toFixed(0)+'k';
    return Math.round(v).toString();
  }
}

/* ---------- Основний розрахунок і UI ---------- */
function calc(){
  const currency = document.getElementById('currency').value;
  const unit = document.getElementById('horizonUnit').value;
  const count = +document.getElementById('horizonCount').value;

  const P0   = +document.getElementById('p0').value || 0;
  const PMT  = +document.getElementById('pmt').value || 0;
  const r    = (+document.getElementById('rate').value || 0) / 100;
  const m    = +document.getElementById('m').value;
  const taxR = (+document.getElementById('tax').value || 0) / 100;
  const infl = (+document.getElementById('infl').value || 0) / 100;

  const label = `${count} ${unit==='months'?'міс.':unit==='years'?'р.':'десятиліть'}, капіталізація ${m}×/рік`;

  // Обидва сценарії, серії для графіка
  const re = computeScenario({P0,PMT,r,m,unit,count,taxR,infl,scenario:'reinvest', collectSeries:true});
  const wd = computeScenario({P0,PMT,r,m,unit,count,taxR,infl,scenario:'withdraw', collectSeries:true});

  renderSummary(document.getElementById('summaryRe'), re, currency, label);
  renderSummary(document.getElementById('summaryWd'), wd, currency, label);

  renderTable(document.querySelector('#tableRe tbody'), re.rows, currency);
  renderTable(document.querySelector('#tableWd tbody'), wd.rows, currency);

  // Різниця
  const diffBox = document.getElementById('diffBox');
  const dfFinal = re.finalGross - wd.finalGross;
  const dfReal  = re.realFinal  - wd.realFinal;
  diffBox.style.display = 'block';
  diffBox.innerHTML =
    `<b>Різниця (Реінвест − Вивід %):</b><br>
     За номіналом: <b>${fmtMoney(dfFinal, currency)}</b><br>` +
    (isFinite(dfReal) ? `З урах. інфляції: <b>${fmtMoney(dfReal, currency)}</b>` : '');

  // Графік
  drawChart(re.series || [], wd.series || []);

  // Пакет у Telegram
  _payload = {
    summary: {
      currency, unit, count, m,
      reinvest: { final: re.finalGross, real: re.realFinal, contrib: re.totalContrib, earned: re.earnedGross },
      withdraw: { final: wd.finalGross, real: wd.realFinal, contrib: wd.totalContrib, earned: wd.earnedGross, out: wd.withdrawn },
      diff: { final: dfFinal, real: dfReal }
    },
    inputs: {P0,PMT,r,m,unit,count,tax:taxR,infl},
    tablePreview: { reinvest: re.rows, withdraw: wd.rows }
  };

  document.getElementById('sendBtn').disabled   = false;
  document.getElementById('csvReBtn').disabled  = false;
  document.getElementById('csvWdBtn').disabled  = false;
}

/* Події */
document.getElementById('applyPreset').addEventListener('click', applyPreset);
document.getElementById('solvePMT').addEventListener('click', solvePMT);
document.getElementById('solveTime').addEventListener('click', solveTime);
document.getElementById('calcBtn').addEventListener('click', calc);

document.getElementById('sendBtn').addEventListener('click', ()=>{
  if(!_payload) return;
  if (window.Telegram?.WebApp){
    window.Telegram.WebApp.sendData(JSON.stringify(_payload));
    window.Telegram.WebApp.close();
  } else {
    alert('Ця кнопка працює лише коли відкрито з Telegram.');
  }
});

document.getElementById('csvReBtn').addEventListener('click', ()=>{
  if(!_payload) return;
  const csv = toCSV(_payload.tablePreview.reinvest);
  download('invest_reinvest_preview.csv', csv);
});
document.getElementById('csvWdBtn').addEventListener('click', ()=>{
  if(!_payload) return;
  const csv = toCSV(_payload.tablePreview.withdraw);
  download('invest_withdraw_preview.csv', csv);
});
</script>
</body>
</html>
